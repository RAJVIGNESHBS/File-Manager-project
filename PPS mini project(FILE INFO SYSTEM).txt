#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
void insert_record();
void display_record();
void search_record();
//void del_record();
void update_record();
void sort_record();
struct student
{
    int roll;
    char sec[10];
    char name[40];
    int mark;
    float grade;
};
struct student s;
void main()
{
     int ch;
     //clrscr();
     while(ch!=7)
     {
        //clrscr();
        printf("******THE PROTOTYPE OF BASIC FILE INFO MANAGEMENT PROGRAM******\n");
        printf("\n\t\tSELECT\n\n ");
        printf("\t\t1:create/insert file\n");
        printf("\t\t2:display file\n");
        printf("\t\t3:search file\n");
        printf("\t\t4:delete file\n");
        printf("\t\t5:update file\n");
        printf("\t\t6:sort file\n");
        printf("\t\t7:exit file\n");
        printf("\n\t\tEnter your choice: \n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:
                //clrscr();
                insert_record();
                break;
            case 2://clrscr();
                display_record();
                break;
            case 3://clrscr();
                search_record();
                break;
            //case 4://clrscr();
             //   del_record();
            //    break;
            case 5://clrscr();
                update_record();
                break;
            case 6://clrscr();
                sort_record();
                break;
            case 7:exit(1);
            default:printf("\n\tinvalid");
        }
        printf("presss any key to contineu");
        getch();
    }    
}            
void insert_record()
{
    FILE*fp;
    fp=fopen("stu.txt","ab+");
    if(fp==NULL)
    {
        printf("\n\tError:Cannot Open the file!!!");
        return;
    }
    printf("\t *****Previous  Stored   Data  ******");
    display_record();
    printf("\n\n\n***Enter new file DATA***\n\n");
    printf("\n\n\tEnter file register number:");
    scanf("%d",&s.roll);
    fflush(stdin);
    printf("\n\t\tEnter file name:" );
    /*gets(s.name);*/ scanf("%s",s.name);
    printf("\n\t\tEnter file section:");
    /*gets(s.sec);*/  scanf("%s",s.sec);
    printf("\n\t\tEnter files data(number):");
    scanf("%d",&s.mark);
    printf("\n\t\tEnter file category number(sub data) 1/2/3/4 :");
    scanf("%f",&s.grade);
    fwrite(&s,sizeof(s),1,fp);
    {
        printf("\n\n\t!!! file Record Inserted Sucessfully\n");
    }
    fclose(fp);
    printf("\n\t\t Updated Record!!\n");
    display_record();
}
void display_record()
{
    FILE*fp;
    fp=fopen("stu.txt","rb");
    if(fp==NULL)
    {
       printf("\n\n\tError : cannot open the file!!!");
       return;
    }
    printf("\n\n\t **** file details are in follows ****\n");
    printf("\nFile no\t\tfile name\t\tsection\t\tdata\t\tsubdata\n\n");
    while(fread(&s,sizeof(s),1,fp)==1)
    {
        printf("%d\t\t%s\t\t%s\t\t%d\t\t%f\n",s.roll,s.name,s.sec,s.mark,s.grade);
    }
    fclose(fp);
}
void search_record()
{
    int ro,flag=0;
    FILE*fp;
    fp=fopen("stu.txt","rb");
    if(fp==NULL)
    {
        printf("\n\t\tError: cannot open the  file!!!");
        return;
    }
    printf("\n\n\tEnter file.no which you want to search");
    scanf("%d",&ro);
    while(fread(&s,sizeof(s),1,fp)>0&&flag==0)
    {
        if(s.roll==ro)
        {
            flag=1;
            printf("\n\n\tSearch is sucessful,the file record is a follows:");
            printf("\nFile no\tfile name\tsection\t\tdata\t\tsubdata\n\n");
            printf("%d\t%s\t%s  \t\t%d\t\t%f\n",s.roll,s.name,s.sec,s.mark,s.grade);
        }
    }
    if(flag==0)
    {
        printf("no such file is found!!!\n");
    }
    fclose(fp);
}
/*void del_record()
{
    char name[40];
    unsigned flag=0;
    FILE *fp,*ft;
    fp=fopen("stu.txt","rb");
    if(fp==NULL)
    {
        printf("\n\t\tError: cannot open the file!!!");
        return;
    }
    printf("\n\t****PREVIOUS STORED DATA****\t");
    display_record();
    printf("\n\n\tenter File register number which you want to delete:");
    scanf("%s",name);
    ft=fopen("stu.txt","ab+");
    while(fread(&s,sizeof(s),1,fp)==1)
    {
        if(strcmp(name,s.name)!=0)
        {
            printf("\n\tRecord deleted sucessfully\n");
            fwrite(&s,sizeof(s),1,ft);
        }
        else
         flag=1;
    }
    if(flag==0)
    {
        printf("\n\n\tNo such record are found!!!");
    }
    fclose(fp);
    fclose(ft);
    remove("stu.txt");
    rename("stu1.txt","stu.txt");
    printf("\n\t\tUpdate Record !!!\n");
    display_record();
}*/
void update_record()
{
    int ro,flag=0;
    FILE*fp;
    fp=fopen("stu.txt","rb+");
    if(fp==NULL)
    {
        printf("\n\n\tRegistration number of the file which you want to update:");
        scanf("%d",&ro);
        printf("\n\t\t***Previous stored rec or given reg.no***");
        while(fread(&s,sizeof(s),1,fp)>0&&flag==0)
        {
            if(s.roll==ro)
            {
                flag=1;
                printf("\nFile no\tfile name\tsection\t\tdata\t\tsubdata\n\n");
                printf("%d\t%s\t%s  \t\t%d\t\t%f\n",s.roll,s.name,s.sec,s.mark,s.grade);
                printf("\n\t\t***now enter the new rec***\n\n");
                printf("\n\t\tUpdated File registration number:");
                scanf("%d",&s.roll);
                fflush(stdin);
                printf("\n\t\tUpdated File name:");
                /*gets(s.name);*/scanf("%c",s.name);
                printf("\n\t\tUpdated file section:");
               /* gets(s.sec);*/ scanf("%c",s.sec);
                printf("\n\t\tUpdated File data:");
                scanf("%d",&s.mark);
                printf("\n\t\tUpdated File sub data:");
                scanf("%f",&s.grade);
                fseek(fp,-(long)sizeof(s),1);
                fwrite(&s,sizeof(s),1,fp);
                printf("\n\n\t\tRecord Updatted sucessfully ");
            }
            
        }
        if(flag==0)
        {
            printf("\n\t\tError : something went wrong!!!");
        }
        fclose(fp);
    }
}
void sort_record()
{
    struct student temp;
    struct student arr[50];
    int i,j,k=0;
    FILE*fp;
    fp=fopen("stu.txt","rb");
    if(fp==NULL)
    {
        printf("\n\t\tError: cannot open filre!!!\n");
    }
    i=0;
    while(fread(&arr[i],sizeof(arr[i]),1,fp)==1)
    {
        i++;k++;
    }
    for(i=0;i<k;i++)
    {for(j=0;j<k-i-1;j++)
     {
         if(arr[j].roll>arr[j+1].roll);
         {
             temp=arr[j];
             arr[j]=arr[j+1];
             arr[j+1]=temp;
         }
     } 
    }
    printf("\n\t\tAfter Sorting file details\n\n");
    for(i=0;i<k;i++)
    {
        printf("%d\t\t%s\t\t%s\t\t%d\t\t%f\n",arr[i].roll,arr[i].name,arr[i].sec,arr[i].mark,arr[i].grade);
    }
    fclose(fp);
}
